# -----------------------------
# Auto Helm Chart Packaging + Publishing via GitHub Actions
# -----------------------------

# .github/workflows/helm-publish.yml
name: Helm Package and Publish

on:
  push:
    branches:
      - main
    paths:
      - 'my-chart/**'

jobs:
  package-publish:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: v3.14.0

    - name: Package Helm Chart
      run: |
        helm dependency update my-chart
        helm package my-chart
        mkdir -p helm-charts
        mv my-chart-*.tgz helm-charts/

    - name: Upload Helm package as artifact
      uses: actions/upload-artifact@v3
      with:
        name: helm-chart
        path: helm-charts/

    - name: Publish to GitHub Pages or OCI Registry (optional)
      run: echo "Add your publish logic here"

# -----------------------------
# Full Example Apps for Java, Python, NodeJS with Docker + Helm + K8s
# -----------------------------

# Example folder structure:
# ├── java-app/
# │   ├── Dockerfile
# │   └── app.jar
# ├── python-app/
# │   ├── Dockerfile
# │   └── app.py
# ├── nodejs-app/
# │   ├── Dockerfile
# │   └── index.js
# └── helm/
#     └── templates/

# ✅ Java Dockerfile
FROM eclipse-temurin:17-jdk
COPY app.jar app.jar
ENTRYPOINT ["java", "-jar", "app.jar"]

# ✅ Python Dockerfile
FROM python:3.11-slim
WORKDIR /app
COPY app.py .
CMD ["python", "app.py"]

# ✅ NodeJS Dockerfile
FROM node:20-alpine
WORKDIR /app
COPY package*.json ./
RUN npm install
COPY . .
CMD ["node", "index.js"]

# ✅ Helm values.yaml (shared)
image:
  repository: my-dockerhub/app
  tag: latest

# ✅ Kubernetes Deployment template
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
spec:
  replicas: 2
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      containers:
      - name: app
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        ports:
        - containerPort: 3000

# ✅ Ingress Controller setup (same as before)
# ✅ Use CI/CD workflow from earlier to build & deploy

# -----------------------------
# End of Full Helm Packaging + Multi-stack Example
# -----------------------------
